public class CustomerDeadLockUseReentrantLock {

	/**
	 * 使用ReentrantLock实现死锁
	 */
	
	private static Lock lock11 = new ReentrantLock();

	private static Lock lock12 = new ReentrantLock();

	public static void main(String[] args) {
		
		new Thread(new Runnable() {

			@Override
			public void run() {
				lock11.lock();
				System.out.println(Thread.currentThread().getName() + "获取了lock11");

				try {
					Thread.sleep(1000);
				} catch (Exception e) {
					e.printStackTrace();
				}

				lock12.lock();
				System.out.println(Thread.currentThread().getName() + "获取了lock12");

				lock11.unlock();
				lock12.unlock();
			}
		}, "lock11-Thread-3").start();

		new Thread(new Runnable() {

			@Override
			public void run() {
				lock12.lock();
				System.out.println(Thread.currentThread().getName() + "获取了lock12");

				try {
					Thread.sleep(1000);
				} catch (Exception e) {
					e.printStackTrace();
				}

				lock11.lock();
				System.out.println(Thread.currentThread().getName() + "获取了lock11");

				lock12.unlock();
				lock11.unlock();
			}
		}, "lock12-Thread-4").start();

	}

}
