public class QuickSort {

	/**
	 * 快速排序 
	 * CSDN blog link:https://blog.csdn.net/u013412772/article/details/52303774
	 */

	public int data[];

	private int partition(int sortArray[], int low, int high) {

		int key = sortArray[low];

		while (low < high) {
			while (low < high && sortArray[high] >= key)
				--high;
			sortArray[low] = sortArray[high];

			while (low < high && sortArray[low] <= key)
				++low;
			sortArray[high] = sortArray[low];
		}
		sortArray[low] = key;
		return low;
	}

	public void sort(int sortArray[], int low, int hight) {
		if (low < hight) {
			int pivotpos = partition(data, low, hight);// 划分
			sort(sortArray, low, pivotpos - 1); // 依次对两个子表进行递归排序
			sort(sortArray, pivotpos + 1, hight);
		}
	}

	public void display() {
		for (int i = 0; i < data.length; i++) {
			System.out.print(data[i]);
			System.out.print(" ");
		}
	}

	public static void main(String[] args) {
		QuickSort qs = new QuickSort();

		int data[] = { 44, 22, 53, 8, 56, 463, 23, 45 };
		qs.data = data;

		qs.sort(data, 0, qs.data.length - 1);
		qs.display();
	}

}
