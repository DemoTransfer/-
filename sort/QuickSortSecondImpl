public class QuickSortSecondImpl {

	/**
	 * 快速排序
	 */

	/**
	 * 核心思想：快速排序的核心思想为分治思想，首先选择一个元素，通过一轮比较将比这个元素小的放到左边，比这个元素大的放在右边，
	 * 然后通过递归将左右两个字串在进行上述比较。平均时间复杂度为N倍的logN
	 */

	public static void main(String[] args) {
		Integer[] data = { 44, 22, 53, 8, 56, 463, 23, 45 };
		Integer[] quickSortArray = quickSort(data, 0, data.length - 1);
		for (Integer item : quickSortArray) {
			System.out.println(item);
		}
	}

	public static Integer[] quickSort(Integer[] a, int low, int high) {
		if (low < high) {
			int mid = getMiddle(a, low, high);
			quickSort(a, low, mid - 1);
			quickSort(a, mid + 1, high);
		}
		return a;
	}

	public static int getMiddle(Integer[] a, int low, int high) {
		int temp = a[low];
		while (low < high) {
			while (low < high && a[high] >= temp) {
				high--;
			}
			a[low] = a[high];

			while (low < high && a[low] <= temp) {
				low++;
			}
			a[high] = a[low];
		}
		a[low] = temp;
		return low;
	}
}
